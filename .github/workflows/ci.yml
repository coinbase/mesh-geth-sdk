name: CI

on:
  push:
    branches:
      - master
      - enable-ci
  pull_request:

env:
  go_version: 1.16
  GO111MODULE: on
  COVERALLS_TOKEN: ${{ secrets.COVERALLS_TOKEN }}

jobs:
  Rosetta-Validation:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Geth Action
      uses: xiaying-peng/geth-action@v0.0.0
      id: geth

    - name: Sleep for 30 seconds
      run: sleep 30s
      shell: bash

    - name: Curl test
      run: |
        curl -X POST "http://127.0.0.1:8546" --header 'Content-Type: application/json' --data '{"jsonrpc":"2.0","method":"eth_getBlockByNumber","params":["latest", true],"id":1}'
      shell: bash

    -name: Start Rosetta Server
     run: nohup make run-rosetta > /dev/null 2>&1 &

    - name: Sleep for 5 seconds
      run: sleep 5s
      shell: bash

    - name: Test Rosetta API
      run: |
        curl -s --location --request POST 'http://localhost:8080/network/status' \
          --header 'Content-Type: application/json' \
          --data-raw '{
              "network_identifier": {
                  "blockchain": "Ethereum",
                  "network": "Mainnet"
              }
          }' | python3 -c 'import json,sys;obj=json.load(sys.stdin);print(obj["current_block_identifier"]["index"])'
      shell: bash

  # Test:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-go@v3
  #       with:
  #         go-version: ${{ env.go_version }}
  #     - run: make test
  # Lint:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-go@v3
  #       with:
  #         go-version: ${{ env.go_version }}
  #     - uses: golangci/golangci-lint-action@v3
  #       with:
  #         version: latest
  #         args: --timeout 3m

  # Check-License:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         version: latest
  #     - uses: actions/setup-go@v3
  #       with:
  #         go-version: ${{ env.go_version }}
  #     - run: make check-license

  # Check-format:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         version: latest
  #     - run: make check-format

  # Salus:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         version: latest
  #     - run: make salus
  

  