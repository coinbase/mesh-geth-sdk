name: CI

on:
  push:
    branches:
      - master
      - enable-ci
  pull_request:

env:
  go_version: 1.16
  GO111MODULE: on
  COVERALLS_TOKEN: ${{ secrets.COVERALLS_TOKEN }}

jobs:
  test:
    runs-on: ubuntu-latest
    name: test
    steps:
    - uses: actions/checkout@v3
    - name: Geth Action
      uses: xiaying-peng/geth-action@v0.0.0
      id: geth
    - name: Sleep for 30 seconds
      run: sleep 30s
      shell: bash
    - name: curl
      run: |
        curl -X POST "http://127.0.0.1:8546" --header 'Content-Type: application/json' --data '{"jsonrpc":"2.0","method":"eth_getBlockByNumber","params":["latest", true],"id":1}'
      shell: bash

  # Test:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-go@v3
  #       with:
  #         go-version: ${{ env.go_version }}
  #     - run: make test
  # Lint:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-go@v3
  #       with:
  #         go-version: ${{ env.go_version }}
  #     - uses: golangci/golangci-lint-action@v3
  #       with:
  #         version: latest
  #         args: --timeout 3m

  # Check-License:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         version: latest
  #     - uses: actions/setup-go@v3
  #       with:
  #         go-version: ${{ env.go_version }}
  #     - run: make check-license

  # Check-format:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         version: latest
  #     - run: make check-format

  # Salus:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         version: latest
  #     - run: make salus
  
  # setup:
  #   runs-on: ubuntu-latest
  #   outputs:
  #     matrix: ${{steps.setup_work.outputs.matrix}}
  #     workload: ${{steps.set_blks_per_chunk.outputs.blks_per_chunk}}
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Set up Go
  #     uses: actions/setup-go@v2
  #     with:
  #       go-version: 1.17
  #   - id: setup_work 
  #     env:
  #         START_INDEX: 0
  #         BLKS_PER_CHUNK: 400
  #     run: echo "::set-output name=matrix::$(.github/scripts/setup.sh)"
  #   - id: set_blks_per_chunk
  #     run: echo "::set-output name=blks_per_chunk::400"

  # rosetta-validation:
  #   runs-on: ubuntu-latest
  #   needs: setup
  #   strategy:
  #     matrix: 
  #       range: ${{fromJson(needs.setup.outputs.matrix)}}
  #   steps:
  #   - run: |
  #         echo ${{ matrix.range }}
  #   - uses: actions/checkout@v2
  #   - name: Set up Go
  #     uses: actions/setup-go@v2
  #     with:
  #       go-version: 1.17
  #   - name: run check:data on mainnet
  #     env:
  #       START_INDEX: ${{ matrix.range }}
  #       COUNT: ${{ needs.setup.outputs.workload }}
  #     run: .github/scripts/cli.sh

  